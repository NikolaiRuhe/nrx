complex_abs(c)
{
	return c[0] * c[0] + c[1] * c[1];
}

complex_mult(a, b)
{
	return [a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]];
}

complex_add(a, b)
{
	return [a[0] + b[0], a[1] + b[1]];
}

mandel(c)
{
        z := [0, 0];
        h := 0;
        while (h < 20) {
			z := complex_add(complex_mult(z, z), c);
            if (complex_abs(z) > 2)
                return  (h % 2) != 0 ? " " : "+";
            h := h + 1;
		}

        return "%";
}



width  := 10;
height := 10;

x := 0.5;
while (x < width)
{
	line := "";
    real := 3 * (x / width - 0.5);

	y := 0.5;
	while (y < height)
	{
        img := 3 * (y / height - 0.5);
        line := line + mandel([real, img]);
		y := y + 1;
	}
	x := x + 1;
	print line;
}
